name: export-optimized

# Based on https://github.com/MewPurPur/TimeAtTheOffice/blob/main/.github/workflows/export-optimized.yml
# With permission from lead maintainer

on:
  workflow_dispatch:

env:
  # Which godot version to use for exporting (e.g., 4.4.1, 4.5)
  GODOT_VERSION: 4.5
  # Which godot release to use for exporting (e.g., stable, dev5, rc2)
  GODOT_RELEASE: beta5
  # Used in the editor config file nameÂ (e.g., 4.4, 4.5, but NOT 4.4.1)
  GODOT_FEATURE_VERSION: 4.5
  # Commit hash
  GODOT_COMMIT_HASH: c81fd6c51
  PROJECT_NAME: TimeAtTheOffice
  # deprecated=no disables deprecated Godot features, which exist for compat and we don't use.
  # vulkan=no, use_volk=no since we use Compatibility Renderer. TODO for 4.5 disable rendering_device too.
  # disable_3d=yes since we don't use 3D features. This automatically disables 3D physics, 3D navigation, and XR.
  # disable_navigation_2d=yes since we don't use navigation.
  # graphite=no I'm not sure why we have disabled, but it's a font-shaping engine.
  # All modules are disabled by default, except for the following:
  # - gdscript: Obvious.
  # - mbedtls: needed for HTTP requests.
  # - text_server_adv: Currently unneeded, but needed for languages like Arabic.
  # - freetype: Something about font rendering.
  # build_proflie disables a lot of unused classes.
  BUILD_OPTIONS: target=template_release
                 lto=full
                 production=yes
                 deprecated=no
                 minizip=no
                 brotli=no
                 vulkan=no
                 use_volk=no
                 openxr=no
                 disable_3d=yes
                 disable_physics_2d=no
                 disable_navigation_2d=yes
                 modules_enabled_by_default=yes
                 module_freetype_enabled=yes
                 module_gdscript_enabled=yes
                 module_svg_enabled=no
                 module_jpg_enabled=no
                 module_webp_enabled=yes
                 module_text_server_fb_enabled=yes
                 module_text_server_adv_enabled=yes
                 graphite=no
                 module_mbedtls_enabled=yes
                 build_profile=../time_at_the_office/.github/disabled_classes.build
  # Links
  GODOT_REPO: https://github.com/godotengine/godot.git
  ANGLE_DOWNLOAD_BASE_URL: https://github.com/godotengine/godot-angle-static/releases/download/chromium%2F6601.2/godot-angle-static

jobs:
  build-linux:
    name: Export TimeAtTheOffice for Linux
    # Stay one LTS before latest to increase portability of Linux artifacts.
    runs-on: ubuntu-22.04
    env:
      PLATFORM: "Linux"
    steps:
      - name: Cache Template
        id: cache-template
        uses: actions/cache@v3
        with:
          key: template-${{ env.PLATFORM }}-${{ env.GODOT_VERSION }}-${{ env.GODOT_RELEASE }}-${{ env.BUILD_OPTIONS }}
          path: |
            ~/.local/share/godot/export_templates/

      - name: Set up Godot Editor
        run: |
          mkdir -p ~/godot-editor
          cd ~/godot-editor
          wget -q https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${GODOT_RELEASE}/Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          unzip Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          mv ./Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64 ~/godot-editor/godot
          echo "~/godot-editor" >> $GITHUB_PATH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: sudo apt install -y scons python3 libwayland-dev

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Clone Godot repository
        run: git clone $GODOT_REPO godot

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Checkout specific commit
        run: |
          cd godot
          git fetch
          git checkout $GODOT_COMMIT_HASH

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: time_at_the_office

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for Linux
        run: |
          cd godot
          scons p=linuxbsd arch=x86_64 ${BUILD_OPTIONS}
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/
          mv ./bin/godot.linuxbsd.template_release.x86_64 ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/linux_release.x86_64

      - name: Export project
        run: |
          cd time_at_the_office
          mkdir -p build
          godot --headless --export-release "${{ env.PLATFORM }}" build/TimeAtTheOffice.x86_64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}.Linux
          path: time_at_the_office/build/TimeAtTheOffice.x86_64
          if-no-files-found: error
          retention-days: 28

  build-windows:
    name: Export TimeAtTheOffice for Windows
    runs-on: ubuntu-latest
    env:
      PLATFORM: "Windows"
    steps:
      - name: Cache Template
        id: cache-template
        uses: actions/cache@v3
        with:
          key: template-${{ env.PLATFORM }}-${{ env.GODOT_VERSION }}-${{ env.GODOT_RELEASE }}-${{ env.BUILD_OPTIONS }}
          path: |
            ~/.local/share/godot/export_templates/

      - name: Set up Godot Editor
        run: |
          mkdir -p ~/godot-editor
          cd ~/godot-editor
          wget -q https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${GODOT_RELEASE}/Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          unzip Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          mv ./Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64 ~/godot-editor/godot
          echo "~/godot-editor" >> $GITHUB_PATH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          sudo apt install -y scons python3
          sudo apt install -y g++-mingw-w64-x86-64-posix

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Download ANGLE Static Libraries
        run: |
          mkdir -p ~/angle
          cd ~/angle
          curl -L -o windows_x86_64.zip ${ANGLE_DOWNLOAD_BASE_URL}-x86_64-gcc-release.zip
          unzip -o windows_x86_64.zip

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Clone Godot repository
        run: git clone $GODOT_REPO godot

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Checkout specific commit
        run: |
          cd godot
          git fetch
          git checkout $GODOT_COMMIT_HASH

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: time_at_the_office

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for Windows
        run: |
          cd godot
          scons p=windows ${BUILD_OPTIONS} angle_libs=~/angle module_astcenc_enabled=yes
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/
          mv ./bin/godot.windows.template_release.x86_64.exe ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/windows_release_x86_64.exe

      - name: Export project
        run: |
          cd time_at_the_office
          mkdir -p build
          godot --headless --export-release "Windows Desktop" build/TimeAtTheOffice.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}.Windows
          path: time_at_the_office/build/TimeAtTheOffice.exe
          if-no-files-found: error
          retention-days: 28

  build-macos:
    name: Export TimeAtTheOffice for MacOS
    runs-on: macos-latest
    env:
      PLATFORM: "macOS"
    steps:
      - name: Cache Template
        id: cache-template
        uses: actions/cache@v3
        with:
          key: template-${{ env.PLATFORM }}-${{ env.GODOT_VERSION }}-${{ env.GODOT_RELEASE }}-${{ env.BUILD_OPTIONS }}
          path: |
            /Users/runner/Library/Application Support/Godot/export_templates/

      - name: Set up Godot Editor
        run: |
          mkdir -p ~/godot-editor
          cd ~/godot-editor
          wget -q https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${GODOT_RELEASE}/Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_macos.universal.zip
          unzip -a Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_macos.universal.zip
          echo "~/godot-editor/Godot.app/Contents/MacOS" >> $GITHUB_PATH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: brew install scons

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Clone Godot repository
        run: git clone $GODOT_REPO godot

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: time_at_the_office

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Checkout specific commit
        run: |
          cd godot
          git fetch
          git checkout $GODOT_COMMIT_HASH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for macOS (arm64 release)
        run: |
          godot --help
          cd godot
          scons p=macos arch=arm64 ${BUILD_OPTIONS}

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for macOS (x86_64 release)
        run: |
          cd godot
          scons p=macos arch=x86_64 ${BUILD_OPTIONS}

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Combine binaries with lipo
        run: |
          cd godot/bin
          lipo -create godot.macos.template_release.x86_64 godot.macos.template_release.arm64 -output godot.macos.template_release.universal
          chmod +x *

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Prepare .app bundle
        run: |
          cd godot/bin
          cp -r ../misc/dist/macos_template.app .
          mkdir -p macos_template.app/Contents/MacOS
          cp godot.macos.template_release.universal macos_template.app/Contents/MacOS/godot_macos_release.universal;
          chmod +x macos_template.app/Contents/MacOS/godot_macos*;
          zip -q -9 -r macos.zip macos_template.app;
          mkdir -p "/Users/runner/Library/Application Support/Godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}"
          mv macos.zip "/Users/runner/Library/Application Support/Godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}"

      - name: Export project
        run: |
          cd time_at_the_office
          mkdir -p build
          godot --headless --export-release "macOS" build/TimeAtTheOffice.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}.MacOS
          path: time_at_the_office/build/TimeAtTheOffice.zip
          if-no-files-found: error
          retention-days: 28

  build-web:
    name: Export TimeAtTheOffice for Web
    runs-on: ubuntu-latest
    env:
      PLATFORM: "Web"
    steps:
      - name: Cache Template
        id: cache-template
        uses: actions/cache@v3
        with:
          key: template-${{ env.PLATFORM }}-${{ env.GODOT_VERSION }}-${{ env.GODOT_RELEASE }}-${{ env.BUILD_OPTIONS }}
          path: |
            ~/.local/share/godot/export_templates/

      - name: Set up Godot Editor
        run: |
          mkdir -p ~/godot-editor
          cd ~/godot-editor
          wget -q https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-${GODOT_RELEASE}/Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          unzip Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64.zip
          mv ./Godot_v${GODOT_VERSION}-${GODOT_RELEASE}_linux.x86_64 ~/godot-editor/godot
          echo "~/godot-editor" >> $GITHUB_PATH

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: sudo apt-get install -y scons python3

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
        shell: bash

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Clone Godot repository
        run: git clone $GODOT_REPO godot

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Checkout specific commit
        run: |
          cd godot
          git fetch
          git checkout $GODOT_COMMIT_HASH

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: time_at_the_office

      - if: ${{ steps.cache-template.outputs.cache-hit != 'true' }}
        name: Build Godot template for Web
        run: |
          cd godot
          source ../emsdk/emsdk_env.sh
          scons p=web arch=wasm32 ${BUILD_OPTIONS} threads=no
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/
          mv ./bin/godot.web.template_release.wasm32.nothreads.zip ~/.local/share/godot/export_templates/${GODOT_VERSION}.${GODOT_RELEASE}/web_nothreads_release.zip

      - name: Export project
        run: |
          cd time_at_the_office
          mkdir -p build/web
          godot --headless --export-release "Web" build/web/TimeAtTheOffice.html
          cd build/web
          mv TimeAtTheOffice.html index.html

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}.Web
          path: time_at_the_office/build/web
          if-no-files-found: error
          retention-days: 28
